{"version":3,"sources":["webpack:///./src/app/layout/crm/crm-routing.module.ts","webpack:///./src/app/layout/crm/crm.component.html","webpack:///./src/app/layout/crm/crm.component.scss","webpack:///./src/app/layout/crm/crm.component.ts","webpack:///./src/app/layout/crm/crm.module.ts"],"names":[],"mappings":"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","file":"crm-crm-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CrmComponent } from './crm.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:CrmComponent\r\n  },\r\n  {\r\n    path:'customer/:id',\r\n    loadChildren:'./customer-details/customer-details.module#CustomerDetailsModule'\r\n  },\r\n  {\r\n    path:'customer',\r\n    redirectTo:''\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CrmRoutingModule { }\r\n","module.exports = \"<div class=\\\"mb-20\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxFlex fxLayoutGap=\\\"5px\\\">\\r\\n  <div fxFlex *ngFor=\\\"let item of CustomerCallTransactions\\\">\\r\\n    <app-stat\\r\\n      [bgClass]=\\\"item.TransactionClassName\\\"\\r\\n      [icon]=\\\"item.TransactionIcon\\\"\\r\\n      [count]=\\\"item.Count\\\"\\r\\n      [label]=\\\"item.TransactionStatusName\\\"\\r\\n      (click)=\\\"SetTransactionType(item.TransactionStatusId)\\\"\\r\\n    ></app-stat>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-20 mt-40\\\" fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\r\\n  <div [fxFlex]=\\\"i\\\" *ngFor=\\\"let i of [33.33]\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"CustomerName\\\" />\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div [fxFlex]=\\\"i\\\" *ngFor=\\\"let i of [15.33]\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Start date\\\" [(ngModel)]=\\\"StartDate\\\" />\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div [fxFlex]=\\\"i\\\" *ngFor=\\\"let i of [15.33]\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"End date\\\" [(ngModel)]=\\\"EndDate\\\" />\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div [fxFlex]=\\\"i\\\" *ngFor=\\\"let i of [20.01]\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <mat-select placeholder=\\\"Select chef\\\" [(ngModel)]=\\\"ChefID\\\">\\r\\n        <mat-option *ngFor=\\\"let item of Chefs\\\" [value]=\\\"item.ChefId\\\">{{ item.ChefName }}</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div [fxFlex]=\\\"i\\\" *ngFor=\\\"let i of [12]\\\">\\r\\n    <div class=\\\"w-100\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"w-100 ptb-10\\\" (click)=\\\"GetCustomerBasicDetails()\\\">\\r\\n        <mat-icon class=\\\"pr-20\\\">search</mat-icon>Search\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-20\\\" flFlex flexLayout=\\\"row\\\" flexLayout.lt-md=\\\"column\\\">\\r\\n  <div fxFlex>\\r\\n    <p *ngIf=\\\"!(CustomerDetails.length > 0)\\\">No data found</p>\\r\\n    <table *ngIf=\\\"CustomerDetails.length > 0\\\" mat-table [dataSource]=\\\"CustomerDetails\\\" class=\\\"mat-elevation-z8\\\">\\r\\n      <ng-container matColumnDef=\\\"SiNo\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Si No.</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{ i + 1 }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"PntName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Patient Name</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.Name }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"PhoneNumber\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Phone Number</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.Mobile }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"RegDate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Register Date</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.RegistrationDate }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"SubDate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Subscribed Date</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.SubscriptionDate }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"LastAction\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Last Action</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.LastAction }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"Chef\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Chef</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.ChefName }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <button mat-icon-button color=\\\"primary\\\">\\r\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" (click)=\\\"EditCustomer(element.CustomerID)\\\">edit</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".mat-card-header-text {\\n  margin: 0 0 !important; }\\n\\n.PatientDetailMain {\\n  padding: 0;\\n  border-radius: 8px;\\n  overflow: hidden; }\\n\\ntable {\\n  width: 100%; }\\n\\n.mat-card {\\n  text-align: center; }\\n\\n.mat-card img {\\n    border-radius: 5px;\\n    margin-top: -25px; }\\n\\n.mat-table {\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12); }\\n\\n.mb-20 {\\n  margin-bottom: 20px; }\\n\\n.mt-40 {\\n  margin-top: 40px; }\\n\\n.dashborad-table-search {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.w-100 {\\n  width: 100%; }\\n\\n.btn-color {\\n  background: red; }\\n\\n.ptb-10 {\\n  padding: 5px 0; }\\n\\n.pr-20 {\\n  padding-right: 20px; }\\n\\n.TabsContents {\\n  box-shadow: none;\\n  padding: 1.8vmax 1.5vmax 1vmax; }\\n\\n.mr-20 {\\n  padding-right: 20px; }\\n\\n.mt-40 {\\n  margin-top: 40px; }\\n\\n.example-chip-list {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2NybS9GOlxcc2hhZmVlcSdzXFxkZWl0dGVjXFxXRUJcXEFETUlOL3NyY1xcYXBwXFxsYXlvdXRcXGNybVxcY3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQXNCLEVBQUE7O0FBR3hCO0VBQ0UsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixnQkFBZ0IsRUFBQTs7QUFFbEI7RUFDRSxXQUFXLEVBQUE7O0FBRWI7RUFDRSxrQkFBa0IsRUFBQTs7QUFEcEI7SUFHSSxrQkFBa0I7SUFDbEIsaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0UsK0dBQStHLEVBQUE7O0FBR2pIO0VBQ0UsbUJBQW1CLEVBQUE7O0FBRXJCO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBRWxCO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQixFQUFBOztBQUVyQjtFQUNFLFdBQVcsRUFBQTs7QUFFYjtFQUNFLGVBQWUsRUFBQTs7QUFFakI7RUFDRSxjQUFjLEVBQUE7O0FBRWhCO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsZ0JBQWdCO0VBQ2hCLDhCQUE4QixFQUFBOztBQUVoQztFQUNFLG1CQUFtQixFQUFBOztBQUVyQjtFQUNFLGdCQUFnQixFQUFBOztBQUVsQjtFQUNFLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9jcm0vY3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkLWhlYWRlci10ZXh0IHtcclxuICBtYXJnaW46IDAgMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uUGF0aWVudERldGFpbE1haW4ge1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxudGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5tYXQtY2FyZCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGltZyB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtMjVweDtcclxuICB9XHJcbn1cclxuLm1hdC10YWJsZSB7XHJcbiAgYm94LXNoYWRvdzogMCAzcHggMXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG59XHJcblxyXG4ubWItMjAge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuLm10LTQwIHtcclxuICBtYXJnaW4tdG9wOiA0MHB4O1xyXG59XHJcbi5kYXNoYm9yYWQtdGFibGUtc2VhcmNoIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbn1cclxuLnctMTAwIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4uYnRuLWNvbG9yIHtcclxuICBiYWNrZ3JvdW5kOiByZWQ7XHJcbn1cclxuLnB0Yi0xMCB7XHJcbiAgcGFkZGluZzogNXB4IDA7XHJcbn1cclxuLnByLTIwIHtcclxuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xyXG59XHJcblxyXG4uVGFic0NvbnRlbnRzIHtcclxuICBib3gtc2hhZG93OiBub25lO1xyXG4gIHBhZGRpbmc6IDEuOHZtYXggMS41dm1heCAxdm1heDtcclxufVxyXG4ubXItMjAge1xyXG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XHJcbn1cclxuLm10LTQwIHtcclxuICBtYXJnaW4tdG9wOiA0MHB4O1xyXG59XHJcbi5leGFtcGxlLWNoaXAtbGlzdCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { CrmService } from './crm.service';\r\nimport { CallStatus, CustomerDetails } from './crm-variables';\r\nimport { Chef } from '../dietitian/dish-preparation/dish-interfaces';\r\nimport { Router } from '@angular/router';\r\nimport { DialogueService } from 'src/app/shared/commmon/dialogue/dialogue.service';\r\nimport { DialogueComponent } from 'src/app/shared/commmon/dialogue/dialogue.component';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-crm',\r\n  templateUrl: './crm.component.html',\r\n  styleUrls: ['./crm.component.scss']\r\n})\r\nexport class CrmComponent implements OnInit {\r\n\r\n  CustomerCallTransactions:CallStatus[]=[];\r\n  Chefs:Chef[]=[];\r\n  CustomerName=\"\";\r\n  StartDate;\r\n  EndDate;\r\n  CustomerDetails:CustomerDetails[]=[];\r\n  displayedColumns = ['SiNo', 'PntName', 'PhoneNumber', 'RegDate', 'SubDate', 'LastAction', 'Chef', 'Action'];\r\n  dataSource = new MatTableDataSource(this.CustomerDetails);\r\n  places: Array<any> = [];\r\n  ChefID=0;\r\n  TransactionTypeID=0;\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  constructor(private service:CrmService,private route:Router,public dialog:MatDialog,private popup:DialogueService) {\r\n    this.GetCallTransactionCount();\r\n    this.GetChefs();\r\n    this.GetCustomerBasicDetails();\r\n  }\r\n\r\n  ngOnInit() {}\r\n  //get call transaction count\r\n  GetCallTransactionCount(){\r\n    this.service.GetCustomerCallStatusCount().subscribe(Response=>{\r\n      if(Response.Status==true){\r\n        this.CustomerCallTransactions=Response.Data;\r\n      }\r\n    });\r\n  }\r\n  //get chefs\r\n  GetChefs(){\r\n    this.service.GetChefs().subscribe(Response=>{\r\n      if(Response.Status== true) {\r\n        this.Chefs =Response.Data;\r\n      }\r\n    })\r\n  }\r\n  // get customer basic details\r\n  GetCustomerBasicDetails() {\r\n    const body= {\r\n      TransactionTypeID:this.TransactionTypeID,\r\n      Name:this.CustomerName,\r\n      StartDate:this.StartDate,\r\n      EndDate:this.EndDate,\r\n      ChefID:this.ChefID\r\n    };\r\n    this.service.GetCustomerBasicDetails(body).subscribe(Response=> {\r\n      if(Response.Status ===true) {\r\n        this.CustomerDetails = Response.Data;\r\n      } else {\r\n        this.CustomerDetails = [];\r\n      }\r\n    });\r\n  }\r\n  // Edit customer\r\n  EditCustomer(CustomerID) {\r\n\r\n    if (CustomerID != null && CustomerID > 0) {\r\n      this.popup.SetData({Message: 'Please wait..', Route: '', Status: ''});\r\n      this.openDialog();\r\n\r\n    this.route.navigate(['ab/crm/customer/' + CustomerID]);\r\n    }\r\n  }\r\n  // set transaction Type id\r\n  SetTransactionType(TransactionTypeID) {\r\n    if (TransactionTypeID === 0) {\r\n      this.ChefID = 0;\r\n    }\r\n    this.TransactionTypeID = TransactionTypeID;\r\n    this.GetCustomerBasicDetails();\r\n  }\r\n// open dialogue\r\nopenDialog(): void {\r\n  const dialogRef = this.dialog.open(DialogueComponent, {\r\n  width: '250px',\r\n  disableClose: true\r\n  });\r\n// fires when dialogue closed\r\n  dialogRef.afterClosed().subscribe(result => {\r\n  //\r\n  });\r\n}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CrmRoutingModule } from './crm-routing.module';\r\nimport { CrmComponent } from './crm.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatIconModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatSelectModule,\r\n  MatInputModule,\r\n  MatNativeDateModule\r\n} from '@angular/material';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { StatModule } from '../../shared/modules/stat/stat.module';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DialogueComponent } from 'src/app/shared/commmon/dialogue/dialogue.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CrmComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CrmRoutingModule,\r\n    CommonModule,\r\n    MatGridListModule,\r\n    StatModule,\r\n    MatCardModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    FlexLayoutModule.withConfig({ addFlexToParent: false })\r\n  ],\r\n  entryComponents: []\r\n})\r\nexport class CrmModule { }\r\n"],"sourceRoot":""}