{"version":3,"sources":["webpack:///./src/app/layout/charts/charts-routing.module.ts","webpack:///./src/app/layout/charts/charts.component.html","webpack:///./src/app/layout/charts/charts.component.scss","webpack:///./src/app/layout/charts/charts.component.ts","webpack:///./src/app/layout/charts/charts.module.ts"],"names":[],"mappings":"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","file":"charts-charts-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ChartsComponent } from './charts.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ChartsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ChartsRoutingModule {}\n","module.exports = \"<div class=\\\"mb-20\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxFlex fxLayoutGap=\\\"20px\\\">\\n    <div fxFlex>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>Bar Chart</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <canvas baseChart [datasets]=\\\"barChartData\\\" [labels]=\\\"barChartLabels\\\" [options]=\\\"barChartOptions\\\" [legend]=\\\"barChartLegend\\\"\\n                    [chartType]=\\\"barChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n    <div fxFlex>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>Doughnut Chart</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <canvas baseChart [data]=\\\"doughnutChartData\\\" [labels]=\\\"doughnutChartLabels\\\" [chartType]=\\\"doughnutChartType\\\" (chartHover)=\\\"chartHovered($event)\\\"\\n                    (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n<div class=\\\"mb-20\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxFlex fxLayoutGap=\\\"20px\\\">\\n    <div fxFlex>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>Radar Chart</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <canvas baseChart width=\\\"500\\\" height=\\\"200\\\" [datasets]=\\\"radarChartData\\\" [labels]=\\\"radarChartLabels\\\" [chartType]=\\\"radarChartType\\\"\\n                    (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n    <div fxFlex>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>Pie Chart</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <canvas baseChart width=\\\"500\\\" height=\\\"200\\\" [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\" (chartHover)=\\\"chartHovered($event)\\\"\\n                    (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n<div class=\\\"mb-20\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxFlex fxLayoutGap=\\\"20px\\\">\\n    <div fxFlex>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>Polar Area Chart</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <canvas baseChart width=\\\"500\\\" height=\\\"200\\\" [data]=\\\"polarAreaChartData\\\" [labels]=\\\"polarAreaChartLabels\\\" [legend]=\\\"polarAreaLegend\\\"\\n                    [chartType]=\\\"polarAreaChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n    <div fxFlex>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>Line Chart</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <canvas baseChart width=\\\"500\\\" height=\\\"200\\\" [datasets]=\\\"lineChartData\\\" [labels]=\\\"lineChartLabels\\\" [options]=\\\"lineChartOptions\\\"\\n                    [colors]=\\\"lineChartColors\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\"\\n                    (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\"","module.exports = \".card {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2NoYXJ0cy9GOlxcc2hhZmVlcSdzXFxkZWl0dGVjXFxXRUJcXEFETUlOL3NyY1xcYXBwXFxsYXlvdXRcXGNoYXJ0c1xcY2hhcnRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2NoYXJ0cy9jaGFydHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-charts',\n    templateUrl: './charts.component.html',\n    styleUrls: ['./charts.component.scss']\n})\nexport class ChartsComponent implements OnInit {\n    // bar chart\n    public barChartOptions: any = {\n        scaleShowVerticalLines: false,\n        responsive: true\n    };\n    public barChartLabels: string[] = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    public barChartType: string;\n    public barChartLegend: boolean;\n\n    public barChartData: any[] = [\n        { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\n        { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' }\n    ];\n\n    // Doughnut\n    public doughnutChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\n    public doughnutChartData: number[] = [350, 450, 100];\n    public doughnutChartType: string;\n\n    // Radar\n    public radarChartLabels: string[] = [\n        'Eating',\n        'Drinking',\n        'Sleeping',\n        'Designing',\n        'Coding',\n        'Cycling',\n        'Running'\n    ];\n    public radarChartData: any = [\n        { data: [65, 59, 90, 81, 56, 55, 40], label: 'Series A' },\n        { data: [28, 48, 40, 19, 96, 27, 100], label: 'Series B' }\n    ];\n    public radarChartType: string;\n\n    // Pie\n    public pieChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\n    public pieChartData: number[] = [300, 500, 100];\n    public pieChartType: string;\n\n    // PolarArea\n    public polarAreaChartLabels: string[] = [\n        'Download Sales',\n        'In-Store Sales',\n        'Mail Sales',\n        'Telesales',\n        'Corporate Sales'\n    ];\n    public polarAreaChartData: number[] = [300, 500, 100, 40, 120];\n    public polarAreaLegend: boolean;\n\n    public polarAreaChartType: string;\n\n    // lineChart\n    public lineChartData: Array<any> = [\n        { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\n        { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' },\n        { data: [18, 48, 77, 9, 100, 27, 40], label: 'Series C' }\n    ];\n    public lineChartLabels: Array<any> = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July'\n    ];\n    public lineChartOptions: any = {\n        responsive: true\n    };\n    public lineChartColors: Array<any> = [\n        {\n            // grey\n            backgroundColor: 'rgba(148,159,177,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        },\n        {\n            // dark grey\n            backgroundColor: 'rgba(77,83,96,0.2)',\n            borderColor: 'rgba(77,83,96,1)',\n            pointBackgroundColor: 'rgba(77,83,96,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(77,83,96,1)'\n        },\n        {\n            // grey\n            backgroundColor: 'rgba(148,159,177,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        }\n    ];\n    public lineChartLegend: boolean;\n    public lineChartType: string;\n\n    // events\n    public chartClicked(e: any): void {\n        // console.log(e);\n    }\n\n    public chartHovered(e: any): void {\n        // console.log(e);\n    }\n\n    public randomize(): void {\n        // Only Change 3 values\n        const data = [\n            Math.round(Math.random() * 100),\n            59,\n            80,\n            Math.random() * 100,\n            56,\n            Math.random() * 100,\n            40\n        ];\n        const clone = JSON.parse(JSON.stringify(this.barChartData));\n        clone[0].data = data;\n        this.barChartData = clone;\n        /**\n         * (My guess), for Angular to recognize the change in the dataset\n         * it has to change the dataset variable directly,\n         * so one way around it, is to clone the data, change it and then\n         * assign it;\n         */\n    }\n    constructor() {}\n\n    ngOnInit() {\n        this.barChartType = 'bar';\n        this.barChartLegend = true;\n        this.doughnutChartType = 'doughnut';\n        this.radarChartType = 'radar';\n\n        this.pieChartType = 'pie';\n        this.polarAreaLegend = true;\n        this.polarAreaChartType = 'polarArea';\n        this.lineChartLegend = true;\n        this.lineChartType = 'line';\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule as Ng2Charts } from 'ng2-charts';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\nimport { ChartsRoutingModule } from './charts-routing.module';\nimport { ChartsComponent } from './charts.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ChartsRoutingModule,\n        Ng2Charts,\n        MatCardModule,\n        MatGridListModule,\n        FlexLayoutModule.withConfig({addFlexToParent: false})\n    ],\n    declarations: [ChartsComponent]\n})\nexport class ChartsModule {}\n"],"sourceRoot":""}