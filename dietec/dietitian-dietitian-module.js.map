{"version":3,"sources":["webpack:///./src/app/layout/dietitian/dietitian-routing.module.ts","webpack:///./src/app/layout/dietitian/dietitian.component.html","webpack:///./src/app/layout/dietitian/dietitian.component.scss","webpack:///./src/app/layout/dietitian/dietitian.component.ts","webpack:///./src/app/layout/dietitian/dietitian.module.ts","webpack:///./src/app/layout/dietitian/dietitian.service.ts"],"names":[],"mappings":"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","file":"dietitian-dietitian-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DietitianComponent } from './dietitian.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DietitianComponent\r\n  },\r\n  {\r\n    path: 'food',\r\n    loadChildren: './dish-preparation/dish-preparation.module#DishPreparationModule'\r\n  },\r\n  {\r\n    path: 'set/:id',\r\n    loadChildren: './set-food/set-food.module#SetFoodModule'\r\n  },\r\n  {\r\n    path: 'patient/:id',\r\n    loadChildren: './patient-view/patient-view.module#PatientViewModule'\r\n  },\r\n  {\r\n    path: 'pre',\r\n    loadChildren: './pre-defined-dish/pre-defined-dish.module#PreDefinedDishModule'\r\n  },\r\n  {\r\n    path: 'ing',\r\n    loadChildren: './food/food.module#FoodModule'\r\n  },\r\n  {\r\n    path: 'chefs',\r\n    loadChildren: './chefs/chefs.module#ChefsModule'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DietitianRoutingModule {}\r\n","module.exports = \"<div class=\\\"mb-20\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxFlex fxLayoutGap=\\\"5px\\\">\\r\\n  <div fxFlex *ngFor=\\\"let item of CustomerCallTransactions\\\">\\r\\n    <app-stat\\r\\n      [bgClass]=\\\"item.TransactionClassName\\\"\\r\\n      [icon]=\\\"item.TransactionIcon\\\"\\r\\n      [count]=\\\"item.Count\\\"\\r\\n      [label]=\\\"item.TransactionStatusName\\\"\\r\\n      (click)=\\\"SetTransactionType(item.TransactionStatusId)\\\"\\r\\n    ></app-stat>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-20 mt-40\\\" fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\r\\n  <div [fxFlex]=\\\"i\\\" *ngFor=\\\"let i of [33.33]\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"CustomerName\\\" />\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div [fxFlex]=\\\"i\\\" *ngFor=\\\"let i of [15.33]\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Start date\\\" [(ngModel)]=\\\"StartDate\\\" />\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div [fxFlex]=\\\"i\\\" *ngFor=\\\"let i of [15.33]\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"End date\\\" [(ngModel)]=\\\"EndDate\\\" />\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div [fxFlex]=\\\"i\\\" *ngFor=\\\"let i of [20.01]\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <mat-select placeholder=\\\"Select chef\\\" [(ngModel)]=\\\"ChefID\\\">\\r\\n        <mat-option *ngFor=\\\"let item of Chefs\\\" [value]=\\\"item.ChefId\\\">{{ item.ChefName }}</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div [fxFlex]=\\\"i\\\" *ngFor=\\\"let i of [12]\\\">\\r\\n    <div class=\\\"w-100\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"w-100 ptb-10\\\" (click)=\\\"GetCustomerBasicDetails()\\\">\\r\\n        <mat-icon class=\\\"pr-20\\\">search</mat-icon>Search\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-20\\\" flFlex flexLayout=\\\"row\\\" flexLayout.lt-md=\\\"column\\\">\\r\\n  <div fxFlex>\\r\\n    <p *ngIf=\\\"!(CustomerDetails.length > 0)\\\">No data found</p>\\r\\n    <table *ngIf=\\\"CustomerDetails.length > 0\\\" mat-table [dataSource]=\\\"CustomerDetails\\\" class=\\\"mat-elevation-z8\\\">\\r\\n      <ng-container matColumnDef=\\\"SiNo\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Si No.</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{ i + 1 }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"PntName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Patient Name</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.Name }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"PhoneNumber\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Phone Number</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.Mobile }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"SubDate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Subscribed Date</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.SubscriptionDate }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"Chef\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Chef</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.ChefName }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <button mat-icon-button color=\\\"primary\\\">\\r\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" (click)=\\\"EditCustomer(element.CustomerID)\\\">edit</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button color=\\\"primary\\\">\\r\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" (click)=\\\"ViewCustomer(element.CustomerID)\\\">restaurant</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-card {\\n  text-align: center; }\\n\\n.mat-card img {\\n    border-radius: 5px;\\n    margin-top: -25px; }\\n\\n.mat-table {\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12); }\\n\\n.mb-20 {\\n  margin-bottom: 20px; }\\n\\n.mt-40 {\\n  margin-top: 40px; }\\n\\n.dashborad-table-search {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.w-100 {\\n  width: 100%; }\\n\\n.btn-color {\\n  background: red; }\\n\\n.ptb-10 {\\n  padding: 5px 0; }\\n\\n.pr-20 {\\n  padding-right: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2RpZXRpdGlhbi9GOlxcc2hhZmVlcSdzXFxkZWl0dGVjXFxXRUJcXEFETUlOL3NyY1xcYXBwXFxsYXlvdXRcXGRpZXRpdGlhblxcZGlldGl0aWFuLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUViO0VBQ0Usa0JBQWtCLEVBQUE7O0FBRHBCO0lBR0ksa0JBQWtCO0lBQ2xCLGlCQUFpQixFQUFBOztBQUdyQjtFQUNFLCtHQUErRyxFQUFBOztBQUdqSDtFQUNFLG1CQUFtQixFQUFBOztBQUVyQjtFQUNFLGdCQUFnQixFQUFBOztBQUVsQjtFQUNFLGFBQWE7RUFDYixtQkFBbUIsRUFBQTs7QUFFckI7RUFDRSxXQUFXLEVBQUE7O0FBRWI7RUFDRSxlQUFlLEVBQUE7O0FBRWpCO0VBQ0UsY0FBYyxFQUFBOztBQUVoQjtFQUNFLG1CQUFtQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2RpZXRpdGlhbi9kaWV0aXRpYW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLm1hdC1jYXJkIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgaW1nIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIG1hcmdpbi10b3A6IC0yNXB4O1xyXG4gIH1cclxufVxyXG4ubWF0LXRhYmxlIHtcclxuICBib3gtc2hhZG93OiAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7XHJcbn1cclxuXHJcbi5tYi0yMCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG4ubXQtNDAge1xyXG4gIG1hcmdpbi10b3A6IDQwcHg7XHJcbn1cclxuLmRhc2hib3JhZC10YWJsZS1zZWFyY2gge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxufVxyXG4udy0xMDAge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5idG4tY29sb3Ige1xyXG4gIGJhY2tncm91bmQ6IHJlZDtcclxufVxyXG4ucHRiLTEwIHtcclxuICBwYWRkaW5nOiA1cHggMDtcclxufVxyXG4ucHItMjAge1xyXG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { CustomerDetails } from '../crm/crm-variables';\r\nimport { DietitianService } from './dietitian.service';\r\nimport { CrmService } from '../crm/crm.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'app-dietitian',\r\n  templateUrl: './dietitian.component.html',\r\n  styleUrls: ['./dietitian.component.scss']\r\n})\r\nexport class DietitianComponent implements OnInit {\r\n  CustomerName=\"\";\r\n  StartDate;\r\n  EndDate;\r\n  CustomerDetails:CustomerDetails[]=[];\r\n  displayedColumns = ['SiNo', 'PntName', 'PhoneNumber','SubDate', 'Chef','Action'];\r\n  dataSource = new MatTableDataSource(this.CustomerDetails);\r\n  ChefID=0;\r\n  TransactionTypeID=0;\r\n  CustomerCallTransactions=[];\r\n  Chefs=[];\r\n  CustomerID;\r\n\r\n  constructor(private service:DietitianService,private diet:CrmService,private route:Router,\r\n    private router:ActivatedRoute) {\r\n    this.GetCustomerBasicDetails();\r\n    this.GetCallTransactionCount();\r\n    this.GetChefs();\r\n    \r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  //get customer basic details\r\n  GetCustomerBasicDetails(){\r\n    let body={\r\n      TransactionTypeID:this.TransactionTypeID,\r\n      Name:this.CustomerName,\r\n      StartDate:this.StartDate,\r\n      EndDate:this.EndDate,\r\n      ChefID:this.ChefID\r\n    };\r\n    this.service.GetDietCustomerBasicDetails(body).subscribe(Response=>{\r\n      if(Response.Status==true){\r\n        this.CustomerDetails=Response.Data;\r\n      }else{\r\n        this.CustomerDetails=[];\r\n      }\r\n    });\r\n  }\r\n  //get call transaction count\r\n  GetCallTransactionCount(){\r\n    this.diet.GetCustomerCallStatusCount().subscribe(Response=>{\r\n      if(Response.Status==true){\r\n        this.CustomerCallTransactions=Response.Data;\r\n      }\r\n    });\r\n  }\r\n  //get chefs\r\n  GetChefs(){\r\n    this.diet.GetChefs().subscribe(Response=>{\r\n      if(Response.Status==true){\r\n        this.Chefs=Response.Data;\r\n      }\r\n    })\r\n  }\r\n  //Edit customer\r\n  EditCustomer(CustomerID){\r\n    if(CustomerID!=null&&CustomerID>0){\r\n    this.route.navigate(['ab/crm/customer/'+CustomerID]);\r\n    }\r\n  }\r\n  //edit customer details\r\n  ViewCustomer(CustomerID){\r\n    if(CustomerID!=null&&CustomerID>0){\r\n      this.route.navigate(['ab/diet/patient/'+CustomerID]);\r\n      }\r\n  }\r\n  \r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport {\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatIconModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatSelectModule,\r\n  MatInputModule,\r\n  MatNativeDateModule\r\n} from '@angular/material';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { StatModule } from '../../shared/modules/stat/stat.module';\r\nimport { DietitianRoutingModule } from './dietitian-routing.module';\r\nimport { DietitianComponent } from './dietitian.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DietitianRoutingModule,\r\n    MatGridListModule,\r\n    StatModule,\r\n    MatCardModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    FlexLayoutModule.withConfig({ addFlexToParent: false })\r\n  ],\r\n  declarations: [DietitianComponent]\r\n})\r\nexport class DietitianModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CommonVariables } from 'src/app/shared/commmon';\r\nimport { CommonResponse } from 'src/app/shared/commmon/ServiceClass';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DietitianService {\r\n\r\n  constructor(private util: CommonVariables, private service: DietitianService,\r\n    private http: HttpClient) { }\r\n\r\n  // get diet customer details\r\n  GetDietCustomerBasicDetails(body= {}) {\r\n    const url = this.util.GetDietCustomerDetails;\r\n    return this.http.post<CommonResponse>(url, body).pipe(map((response: CommonResponse) => response));\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}