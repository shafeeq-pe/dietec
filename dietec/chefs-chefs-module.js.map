{"version":3,"sources":["webpack:///./src/app/layout/dietitian/chefs/chefs-routing.module.ts","webpack:///./src/app/layout/dietitian/chefs/chefs.component.html","webpack:///./src/app/layout/dietitian/chefs/chefs.component.scss","webpack:///./src/app/layout/dietitian/chefs/chefs.component.ts","webpack:///./src/app/layout/dietitian/chefs/chefs.module.ts"],"names":[],"mappings":"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","file":"chefs-chefs-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChefsComponent } from './chefs.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: ChefsComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ChefsRoutingModule { }\r\n","module.exports = \"<h1>Add Chef</h1>\\r\\n<div fxFlex=\\\"100%\\\" fxLayout=\\\"row wrap\\\"  fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" >\\r\\n<div fxFlex=\\\"calc(50%-20px)\\\" >\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <mat-label>Chef Name</mat-label>\\r\\n      <input matInput placeholder=\\\"Chef Name\\\" [(ngModel)]=\\\"Chef.ChefName\\\" />\\r\\n    </mat-form-field>\\r\\n    \\r\\n</div>\\r\\n<div fxFlex=\\\"calc(50%-20px)\\\" >\\r\\n  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n    <mat-label>Description</mat-label>\\r\\n    <input matInput placeholder=\\\"Description\\\" [(ngModel)]=\\\"Chef.Description\\\" />\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div fxFlex=\\\"200px\\\" fxLayout=\\\"column wrap\\\" >\\r\\n    <div fxFlex fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"left left\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\r\\n        <div >  <mat-label>Profile Picture</mat-label></div>\\r\\n        <div > <button mat-raised-button color=\\\"accent\\\" class=\\\"w-100\\\" (click)=\\\"fileInput.click()\\\">Upload</button></div>\\r\\n    </div>\\r\\n           \\r\\n    <div  fxLayout=\\\"row wrap\\\" class=\\\"UploadedImage\\\"> \\r\\n        <div fxFlex>\\r\\n         <input hidden type=\\\"file\\\" #fileInput accept=\\\"image/*\\\"  (change)=\\\"handleImageFileInput($event.target.files)\\\"/>\\r\\n         <img height=\\\"150px\\\" width=\\\"150px\\\" *ngIf=\\\"ImageSource!=null\\\" [src]=\\\"ImageSource || 'http://placehold.it/180'\\\">\\r\\n       </div>\\r\\n       </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<p>{{Response}}</p>\\r\\n\\r\\n<div fxFlex=\\\"200px\\\" fxLayout=\\\"row wrap\\\" >\\r\\n    <div class=\\\"w-100 mt-40\\\">\\r\\n      <button  class=\\\"w-100 SaveMAinButton\\\"   mat-raised-button color=\\\"primary\\\" (click)=\\\"SaveChef()\\\">Save</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"AllChefs\\\" class=\\\"mat-elevation-z8 w-100\\\">\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n  \\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"position\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element;index as i\\\"> {{i+1}} </td>\\r\\n    </ng-container>\\r\\n  \\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ChefName}} </td>\\r\\n    </ng-container>\\r\\n  \\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"weight\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Description}} </td>\\r\\n    </ng-container>  \\r\\n  \\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  \"","module.exports = \".UploadedImage {\\n  margin-top: 25px; }\\n\\n.UploadedImage img {\\n  width: 200px;\\n  height: 200px;\\n  margin-top: 30px; }\\n\\n.mat-table {\\n  margin-top: 25px; }\\n\\n.SaveMAinButton {\\n  margin-top: 25px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2RpZXRpdGlhbi9jaGVmcy9GOlxcc2hhZmVlcSdzXFxkZWl0dGVjXFxXRUJcXEFETUlOL3NyY1xcYXBwXFxsYXlvdXRcXGRpZXRpdGlhblxcY2hlZnNcXGNoZWZzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBR0ksZ0JBQ0osRUFBQTs7QUFDQTtFQUNBLFlBQVk7RUFDWixhQUFhO0VBRWIsZ0JBQWdCLEVBQUE7O0FBSWhCO0VBQ0ksZ0JBQWdCLEVBQUE7O0FBRXBCO0VBQ0ksZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvZGlldGl0aWFuL2NoZWZzL2NoZWZzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLlVwbG9hZGVkSW1hZ2V7XHJcblxyXG5cclxuICAgIG1hcmdpbi10b3A6IDI1cHhcclxufVxyXG4uVXBsb2FkZWRJbWFnZSBpbWd7XHJcbndpZHRoOiAyMDBweDtcclxuaGVpZ2h0OiAyMDBweDtcclxuXHJcbm1hcmdpbi10b3A6IDMwcHg7XHJcblxyXG59XHJcblxyXG4ubWF0LXRhYmxle1xyXG4gICAgbWFyZ2luLXRvcDogMjVweDtcclxufVxyXG4uU2F2ZU1BaW5CdXR0b257XHJcbiAgICBtYXJnaW4tdG9wOiAyNXB4O1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { CommonService } from 'src/app/shared/services/common.service';\r\nimport { CommonVariables } from 'src/app/shared/commmon';\r\nimport { CrmService } from '../../crm/crm.service';\r\n\r\n@Component({\r\n  selector: 'app-chefs',\r\n  templateUrl: './chefs.component.html',\r\n  styleUrls: ['./chefs.component.scss']\r\n})\r\nexport class ChefsComponent implements OnInit {\r\nChef = {\r\n  ChefName: '',\r\n  Description: '',\r\n  ProfilePic: ''\r\n};\r\nAllChefs = [];\r\nImageSource = null;\r\nResponse = '';\r\ndisplayedColumns = ['position', 'name', 'weight'];\r\n  constructor(private common: CommonService, private util: CommonVariables, private service: CrmService) {\r\n    this.GetChef();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n// upload image files\r\nhandleImageFileInput(files: FileList) {\r\n  if (files.length > 0) {\r\n    const reader = new FileReader();\r\n    reader.onload = e => this.ImageSource = reader.result;\r\n    reader.readAsDataURL(files[0]);\r\n    this.common.DietecMediaUpload(files[0]).subscribe(Response => {if (Response.Status === true) {\r\n      if (Response.Status === true) {\r\n          this.Chef.ProfilePic = Response.FileName;\r\n        }\r\n    }});\r\n  }\r\n}\r\n// save chef\r\nSaveChef() {\r\n  if (this.Chef.ChefName == null || this.Chef.ChefName === '') {\r\n    this.Response = 'Name Required'; return;\r\n  } else {this.Response = ''; }\r\n  const url = this.util.SaveChef;\r\n  this.common.Post(url, this.Chef).subscribe(Response => {\r\n    if (Response.Status === true) {\r\n        this.GetChef();\r\n    }\r\n  });\r\n}\r\n// get chefs\r\nGetChef() {\r\n  this.service.GetChefs().subscribe(Response => {\r\n    if (Response.Status === true) {\r\n      this.AllChefs = Response.Data;\r\n    }\r\n  });\r\n}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ChefsRoutingModule } from './chefs-routing.module';\r\nimport { ChefsComponent } from './chefs.component';\r\nimport { MatInputModule, MatTableModule, MatButtonModule } from '@angular/material';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n@NgModule({\r\n  declarations: [ChefsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ChefsRoutingModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatTableModule,\r\n    FlexLayoutModule.withConfig({ addFlexToParent: false })\r\n  ]\r\n})\r\nexport class ChefsModule { }\r\n"],"sourceRoot":""}