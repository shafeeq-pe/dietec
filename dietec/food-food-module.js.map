{"version":3,"sources":["webpack:///./src/app/layout/dietitian/food/food-routing.module.ts","webpack:///./src/app/layout/dietitian/food/food.component.html","webpack:///./src/app/layout/dietitian/food/food.component.scss","webpack:///./src/app/layout/dietitian/food/food.component.ts","webpack:///./src/app/layout/dietitian/food/food.module.ts","webpack:///./src/app/layout/dietitian/food/food.service.ts"],"names":[],"mappings":"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","file":"food-food-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FoodComponent } from './food.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: FoodComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FoodRoutingModule { }\r\n","module.exports = \"<h1>Add Food</h1>\\r\\n<div fxFlex=\\\"50\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"left left\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" >\\r\\n  <div fxFlex=\\\"100\\\" >\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n      <mat-label>Ingredient</mat-label>\\r\\n      <input matInput placeholder=\\\"Add Ingredient\\\" [(ngModel)]=\\\"Food.FoodName\\\" />\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n<div fxFlex=\\\"50\\\" fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"left left\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\" >\\r\\n    <div fxFlex >\\r\\n        <div class=\\\"w-100\\\">\\r\\n          \\r\\n          <mat-checkbox color=\\\"primary\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"Food.ReadyToEat\\\">Ready To Eat</mat-checkbox>\\r\\n         \\r\\n        </div>\\r\\n    </div>\\r\\n    <div >\\r\\n        <div fxFlex=\\\"150px\\\" fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"left left\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" class=\\\"w-100 \\\" (click)=\\\"SaveFood()\\\" aria-label=\\\"Response\\\">Save</button>\\r\\n        </div>\\r\\n    </div> \\r\\n  \\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <img height=\\\"150px\\\" width=\\\"150px\\\" *ngIf=\\\"ImageSource!=null\\\" [src]=\\\"ImageSource || 'http://placehold.it/180'\\\">-->\\r\\n\\r\\n<div class=\\\"w-100 AddedFoods\\\">\\r\\n<mat-chip-list #chipList>\\r\\n    <mat-chip  *ngFor=\\\"let item of AllFood\\\">\\r\\n      <p>{{ item.FoodName }}</p>\\r\\n    </mat-chip>   \\r\\n</mat-chip-list>\\r\\n</div>\"","module.exports = \".AddedFoods {\\n  padding: 10px;\\n  box-sizing: border-box;\\n  border: 1px solid #f1f1f1;\\n  margin-top: 25px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2RpZXRpdGlhbi9mb29kL0Y6XFxzaGFmZWVxJ3NcXGRlaXR0ZWNcXFdFQlxcQURNSU4vc3JjXFxhcHBcXGxheW91dFxcZGlldGl0aWFuXFxmb29kXFxmb29kLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYTtFQUVqQixzQkFBc0I7RUFDdEIseUJBQXdCO0VBQ3hCLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2RpZXRpdGlhbi9mb29kL2Zvb2QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuQWRkZWRGb29kc3tcclxuICAgIHBhZGRpbmc6IDEwcHg7IFxyXG5cclxuYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuYm9yZGVyOjFweCBzb2xpZCAjZjFmMWYxO1xyXG5tYXJnaW4tdG9wOiAyNXB4O1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FoodService } from './food.service';\r\nimport {MatSnackBar} from '@angular/material';\r\n@Component({\r\n  selector: 'app-food',\r\n  templateUrl: './food.component.html',\r\n  styleUrls: ['./food.component.scss']\r\n})\r\nexport class FoodComponent implements OnInit {\r\nFood = {FoodName: '', ReadyToEat: false};\r\ndisplayedColumns = ['position', 'name'];\r\nAllFood = [];\r\nResponse = '';\r\n\r\n  constructor(private service: FoodService, private snackBar: MatSnackBar) {\r\n    this.GetFood();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n  // getFood\r\n  GetFood() {\r\n    this.service.GetFood().subscribe(Response => {\r\n      if (Response.Status === true) {\r\n        this.AllFood = Response.Data;\r\n      }\r\n    });\r\n  }\r\n  // save Food\r\n  SaveFood() {\r\n    if (this.Food.FoodName == null || this.Food.FoodName === '') {\r\n      this.openSnackBar('Name Required');\r\n      return;\r\n    } else {\r\n      this.Response = '';\r\n    }\r\n    const body = {'FoodName': this.Food.FoodName, 'ReadyToEat': (this.Food.ReadyToEat === true ? 1 : 0)};\r\n    this.service.SaveFood(body).subscribe(Response => {\r\n      if (Response.Status === true) {\r\n        this.Food.FoodName = '';\r\n        this.GetFood();\r\n      }\r\n    });\r\n  }\r\n  openSnackBar(message: string) {\r\n    this.snackBar.open(message , '', {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { FoodRoutingModule } from './food-routing.module';\r\nimport { FoodComponent } from './food.component';\r\nimport { MatInputModule, MatSelectModule, MatCheckboxModule, MatTableModule, MatChipsModule } from '@angular/material';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\n\r\n@NgModule({\r\n  declarations: [FoodComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FoodRoutingModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatSnackBarModule,\r\n    MatSelectModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    FlexLayoutModule.withConfig({ addFlexToParent: false })\r\n  ]\r\n})\r\nexport class FoodModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CommonVariables } from 'src/app/shared/commmon';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CommonResponse } from 'src/app/shared/commmon/ServiceClass';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FoodService {\r\n\r\n  constructor(private util: CommonVariables, private http: HttpClient) { }\r\n  // save food\r\n  SaveFood(body) {\r\n    const url = this.util.SaveFood;\r\n    return this.http.post<CommonResponse>(url, body).pipe(map((response: CommonResponse) => {\r\n      return response;\r\n    }));\r\n  }\r\n  // get food\r\n  GetFood() {\r\n    const url = this.util.GetFoods;\r\n    return this.http.get<CommonResponse>(url).pipe(map((response: CommonResponse) => {\r\n      return response;\r\n    }));\r\n  }\r\n}\r\n"],"sourceRoot":""}