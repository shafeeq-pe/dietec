{"version":3,"sources":["webpack:///./src/app/layout/dietitian/patient-view/patient-view-routing.module.ts","webpack:///./src/app/layout/dietitian/patient-view/patient-view.component.html","webpack:///./src/app/layout/dietitian/patient-view/patient-view.component.scss","webpack:///./src/app/layout/dietitian/patient-view/patient-view.component.ts","webpack:///./src/app/layout/dietitian/patient-view/patient-view.module.ts","webpack:///./src/app/layout/dietitian/set-food/set-food.service.ts"],"names":[],"mappings":"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","file":"patient-view-patient-view-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PatientViewComponent } from './patient-view.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PatientViewComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PatientViewRoutingModule {}\r\n","module.exports = \"<mat-card class=\\\"PatientDetailMain\\\">\\r\\n  <mat-tab-group backgroundColor=\\\"warn\\\" dynamicHeight animationDuration=\\\"1000ms\\\">\\r\\n    <mat-tab label=\\\"Patient Details\\\">\\r\\n      <mat-card class=\\\"TabsContents\\\">\\r\\n        <div class=\\\"PatientProfileTop mb-20\\\">\\r\\n          <div class=\\\"PatientPicture\\\">\\r\\n            <img src=\\\"assets/images/patient-1.png\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"PatientNameDetails\\\">\\r\\n            <h2>{{CustomerDetails.Name}}</h2>\\r\\n            <div class=\\\"GenderAgeFlex\\\">\\r\\n              <div class=\\\"Gender\\\">{{CustomerDetails.Gender}}</div>\\r\\n              <div class=\\\"Age\\\">{{CustomerDetails.Age}} years old</div>\\r\\n            </div>\\r\\n            <!-- <p>\\r\\n              Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna\\r\\n              aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nos\\r\\n            </p> -->\\r\\n          </div>\\r\\n          <div class=\\\"ChefAndDiet\\\">\\r\\n            <div>\\r\\n              <h6>Chef Name</h6>\\r\\n              <h3>{{CustomerDetails.ChefName}}</h3>\\r\\n            </div>\\r\\n            <div class=\\\"dietType\\\">\\r\\n              <h6>Diet Type</h6>\\r\\n              <h3>{{CustomerDetails.FoodDietTypeName}}</h3>\\r\\n              <button class=\\\"SetDietBtn\\\" (click)=\\\"SetDiet()\\\" mat-raised-button color=\\\"primary\\\">Set Diet</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"CategoryTitle\\\">\\r\\n          <h2>Physical Measurements</h2>\\r\\n        </div>\\r\\n        <div class=\\\"PatientCategoryDetails mb-20\\\" fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\r\\n          <!-- 1 -->\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <h6>Height</h6>\\r\\n            <h3>{{CustomerDetails.Height}} CM</h3>\\r\\n          </div>\\r\\n          <!-- 2 -->\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <h6>Weight</h6>\\r\\n            <h3>{{CustomerDetails.Weight}} KG</h3>\\r\\n          </div>\\r\\n          <!-- 3 -->\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <h6>Waist</h6>\\r\\n            <h3>{{CustomerDetails.Waist}} CM</h3>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <h6>Automatic BMI</h6>\\r\\n            <h3>{{(CustomerDetails.Weight/((CustomerDetails.Height/100)*(CustomerDetails.Height/100))).toFixed(2)}}</h3>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"CategoryTitle\\\">\\r\\n          <h2>Physical Workouts</h2>\\r\\n        </div>\\r\\n        <div class=\\\"PatientCategoryDetails\\\" fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\r\\n          <!-- 1 -->\\r\\n          <div fxFlex=\\\"100\\\">\\r\\n            <h3>{{CustomerDetails.WorkOutType}} ({{CustomerDetails.Frequency}} hr)</h3>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Call History\\\">\\r\\n      <mat-card class=\\\"TabsContents\\\">\\r\\n        <!-- <div class=\\\"\\\" fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\r\\n          <div [fxFlex]=\\\"i\\\" *ngFor=\\\"let i of [33.33]\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Status</mat-label>\\r\\n              <mat-select placeholder=\\\"Select chef\\\">\\r\\n                <mat-option>Test </mat-option>\\r\\n                <mat-option>Test 2</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          \\r\\n          <div [fxFlex]=\\\"i\\\" *ngFor=\\\"let i of [25]\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Filter by Date </mat-label>\\r\\n              <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Placeholder\\\" />\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #picker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div> -->\\r\\n\\r\\n        <div class=\\\"mat-elevation-z1\\\">\\r\\n          <table mat-table [dataSource]=\\\"CallHistory\\\">           \\r\\n            <ng-container matColumnDef=\\\"date\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>Date</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.TransactionDate }}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Name Column -->\\r\\n            <ng-container matColumnDef=\\\"status\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>Status</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.TransactionStatusName }}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n    </mat-tab>\\r\\n\\r\\n    <mat-tab label=\\\"Diet History\\\">\\r\\n      <mat-card class=\\\"TabsContents\\\">\\r\\n        <div class=\\\"mat-elevation-z1\\\">\\r\\n          <table mat-table [dataSource]=\\\"FilterDishes()\\\">\\r\\n            <!--- Note that these columns can be defined in any order.\\r\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n            \\r\\n            <!-- Position Column -->\\r\\n            <ng-container matColumnDef=\\\"date\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Date</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.DietDate }}</td>\\r\\n            </ng-container>\\r\\n            \\r\\n            <!-- Weight Column -->\\r\\n            <ng-container matColumnDef=\\\"MealType\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Meal Type</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.MealTypeName }}</td>\\r\\n            </ng-container>\\r\\n            \\r\\n            <!-- Symbol Column -->\\r\\n            <ng-container matColumnDef=\\\"FoodGroup\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Food</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.Title }}</td>\\r\\n            </ng-container>\\r\\n            \\r\\n            <!-- <ng-container matColumnDef=\\\"Action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button (click)=\\\"SetDiet()\\\" mat-mini-fab color=\\\"primary\\\">\\r\\n                <mat-icon (click)=\\\"SetDiet()\\\">edit</mat-icon></button>\\r\\n            </td>\\r\\n            </ng-container>             -->\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"DietHistColoumn\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: DietHistColoumn\\\"></tr>\\r\\n            </table>\\r\\n          </div>\\r\\n      </mat-card>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n</mat-card>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.PatientDetailMain {\\n  padding: 0;\\n  border-radius: 8px;\\n  overflow: hidden; }\\n\\n.TabsContents {\\n  box-shadow: none;\\n  padding: 1.8vmax 1.5vmax 1vmax; }\\n\\n.mr-20 {\\n  padding-right: 20px; }\\n\\n.mt-40 {\\n  margin-top: 40px; }\\n\\n.example-chip-list {\\n  width: 100%; }\\n\\n.TabsContents {\\n  box-shadow: none;\\n  padding: 1.8vmax 1.5vmax 1vmax; }\\n\\n.mr-20 {\\n  padding-right: 20px; }\\n\\n.mt-40 {\\n  margin-top: 40px; }\\n\\n.example-chip-list {\\n  width: 100%; }\\n\\n.PatientProfileTop {\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex-direction: row;\\n  padding: 1% 0 1.2%;\\n  border-bottom: 5px #f1f1f1 solid;\\n  position: relative; }\\n\\n.PatientPicture {\\n  overflow: hidden;\\n  width: 150px;\\n  height: 150px;\\n  border-radius: 75px;\\n  border: 5px #f1f1f1 solid; }\\n\\n.PatientPicture img {\\n  width: 100%;\\n  max-width: 100%; }\\n\\n.PatientNameDetails {\\n  padding-left: 25px;\\n  max-width: calc(100% - 490px);\\n  display: block; }\\n\\n.PatientNameDetails h2 {\\n  font-size: 26px;\\n  line-height: 26px;\\n  padding: 0 0 10px;\\n  margin: 0; }\\n\\n.PatientNameDetails p {\\n  font-size: 17px;\\n  line-height: 22px;\\n  padding: 10px 0;\\n  margin: 0;\\n  max-width: 490px;\\n  color: #999999; }\\n\\n.GenderAgeFlex {\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex-direction: row; }\\n\\n.Gender {\\n  display: block;\\n  font-size: 18px;\\n  padding-right: 15px;\\n  line-height: 18px; }\\n\\n.Age {\\n  display: block;\\n  font-size: 18px;\\n  line-height: 18px;\\n  border-left: 3px #333333 solid;\\n  padding-left: 15px; }\\n\\n.ChefAndDiet {\\n  width: 200px;\\n  float: right;\\n  display: block;\\n  align-self: right;\\n  width: 288px;\\n  position: absolute;\\n  right: 20px;\\n  bottom: 25%;\\n  padding-left: 45px;\\n  border-left: 3px solid #999999; }\\n\\n.ChefAndDiet h6 {\\n  display: block;\\n  font-size: 16px;\\n  line-height: 16px;\\n  margin: 0;\\n  padding: 0 0 10px;\\n  color: #999999;\\n  font-weight: normal; }\\n\\n.ChefAndDiet h3 {\\n  display: block;\\n  font-size: 18px;\\n  line-height: 16px;\\n  margin: 0;\\n  padding: 0; }\\n\\n.dietType {\\n  margin-top: 25px; }\\n\\n.SetDietBtn {\\n  margin-top: 10px;\\n  border-radius: 50px;\\n  width: 100px; }\\n\\n.PatientCategoryDetails {\\n  width: 100%;\\n  padding-bottom: 25px; }\\n\\n.PatientCategoryDetails h6 {\\n  display: block;\\n  font-size: 16px;\\n  line-height: 16px;\\n  margin: 0;\\n  padding: 0 0 10px;\\n  color: #999999;\\n  font-weight: normal; }\\n\\n.PatientCategoryDetails h3 {\\n  display: block;\\n  font-size: 18px;\\n  line-height: 16px;\\n  margin: 0;\\n  padding: 0; }\\n\\n.CategoryTitle {\\n  background: #eaecec;\\n  color: #607d8b;\\n  padding: 10px 20px;\\n  text-align: left;\\n  position: relative;\\n  border-radius: 5px;\\n  margin-bottom: 20px; }\\n\\n.CategoryTitle h2 {\\n  margin: 0;\\n  font-size: 18px; }\\n\\n.mat-mini-fab {\\n  width: 30px;\\n  height: 30px; }\\n\\n.material-icons {\\n  height: 16px;\\n  width: 16px;\\n  font-size: 16px;\\n  line-height: 8px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2RpZXRpdGlhbi9wYXRpZW50LXZpZXcvRjpcXHNoYWZlZXEnc1xcZGVpdHRlY1xcV0VCXFxBRE1JTi9zcmNcXGFwcFxcbGF5b3V0XFxkaWV0aXRpYW5cXHBhdGllbnQtdmlld1xccGF0aWVudC12aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSxnQkFBZ0I7RUFDaEIsOEJBQThCLEVBQUE7O0FBRWhDO0VBQ0UsbUJBQW1CLEVBQUE7O0FBRXJCO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBRWxCO0VBQ0UsV0FBVyxFQUFBOztBQUViO0VBQ0UsZ0JBQWdCO0VBQ2hCLDhCQUE4QixFQUFBOztBQUVoQztFQUNFLG1CQUFtQixFQUFBOztBQUVyQjtFQUNFLGdCQUFnQixFQUFBOztBQUVsQjtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLGFBQWE7RUFDYixlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixnQ0FBZ0M7RUFDaEMsa0JBQWtCLEVBQUE7O0FBRXBCO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHlCQUF5QixFQUFBOztBQUUzQjtFQUNFLFdBQVc7RUFDWCxlQUFlLEVBQUE7O0FBRWpCO0VBQ0Usa0JBQWtCO0VBQ2xCLDZCQUE2QjtFQUM3QixjQUFjLEVBQUE7O0FBRWhCO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIsU0FBUyxFQUFBOztBQUVYO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsU0FBUztFQUNULGdCQUFnQjtFQUNoQixjQUFjLEVBQUE7O0FBRWhCO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZixtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQiw4QkFBOEI7RUFDOUIsa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWixjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsOEJBQThCLEVBQUE7O0FBR2hDO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsU0FBUztFQUNULGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsbUJBQW1CLEVBQUE7O0FBRXJCO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsU0FBUztFQUNULFVBQVUsRUFBQTs7QUFFWjtFQUNFLGdCQUFnQixFQUFBOztBQUVsQjtFQUNFLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWSxFQUFBOztBQUdkO0VBQ0UsV0FBVztFQUNYLG9CQUFvQixFQUFBOztBQUV0QjtFQUNFLGNBQWM7RUFDZCxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLFNBQVM7RUFDVCxpQkFBaUI7RUFDakIsY0FBYztFQUNkLG1CQUFtQixFQUFBOztBQUdyQjtFQUNFLGNBQWM7RUFDZCxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLFNBQVM7RUFDVCxVQUFVLEVBQUE7O0FBR1o7RUFDRSxtQkFBbUI7RUFDbkIsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixtQkFBbUIsRUFBQTs7QUFFckI7RUFDRSxTQUFTO0VBQ1QsZUFBZSxFQUFBOztBQUVqQjtFQUNFLFdBQVc7RUFDWCxZQUFZLEVBQUE7O0FBRWQ7RUFDRSxZQUFZO0VBQ1osV0FBVztFQUNYLGVBQWU7RUFDZixnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9kaWV0aXRpYW4vcGF0aWVudC12aWV3L3BhdGllbnQtdmlldy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLlBhdGllbnREZXRhaWxNYWluIHtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4uVGFic0NvbnRlbnRzIHtcclxuICBib3gtc2hhZG93OiBub25lO1xyXG4gIHBhZGRpbmc6IDEuOHZtYXggMS41dm1heCAxdm1heDtcclxufVxyXG4ubXItMjAge1xyXG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XHJcbn1cclxuLm10LTQwIHtcclxuICBtYXJnaW4tdG9wOiA0MHB4O1xyXG59XHJcbi5leGFtcGxlLWNoaXAtbGlzdCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLlRhYnNDb250ZW50cyB7XHJcbiAgYm94LXNoYWRvdzogbm9uZTtcclxuICBwYWRkaW5nOiAxLjh2bWF4IDEuNXZtYXggMXZtYXg7XHJcbn1cclxuLm1yLTIwIHtcclxuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xyXG59XHJcbi5tdC00MCB7XHJcbiAgbWFyZ2luLXRvcDogNDBweDtcclxufVxyXG4uZXhhbXBsZS1jaGlwLWxpc3Qge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uUGF0aWVudFByb2ZpbGVUb3Age1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgcGFkZGluZzogMSUgMCAxLjIlO1xyXG4gIGJvcmRlci1ib3R0b206IDVweCAjZjFmMWYxIHNvbGlkO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG4uUGF0aWVudFBpY3R1cmUge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgd2lkdGg6IDE1MHB4O1xyXG4gIGhlaWdodDogMTUwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNzVweDtcclxuICBib3JkZXI6IDVweCAjZjFmMWYxIHNvbGlkO1xyXG59XHJcbi5QYXRpZW50UGljdHVyZSBpbWcge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG4uUGF0aWVudE5hbWVEZXRhaWxzIHtcclxuICBwYWRkaW5nLWxlZnQ6IDI1cHg7XHJcbiAgbWF4LXdpZHRoOiBjYWxjKDEwMCUgLSA0OTBweCk7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuLlBhdGllbnROYW1lRGV0YWlscyBoMiB7XHJcbiAgZm9udC1zaXplOiAyNnB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xyXG4gIHBhZGRpbmc6IDAgMCAxMHB4O1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG4uUGF0aWVudE5hbWVEZXRhaWxzIHAge1xyXG4gIGZvbnQtc2l6ZTogMTdweDtcclxuICBsaW5lLWhlaWdodDogMjJweDtcclxuICBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIG1heC13aWR0aDogNDkwcHg7XHJcbiAgY29sb3I6ICM5OTk5OTk7XHJcbn1cclxuLkdlbmRlckFnZUZsZXgge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbn1cclxuXHJcbi5HZW5kZXIge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xyXG59XHJcblxyXG4uQWdlIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDE4cHg7XHJcbiAgYm9yZGVyLWxlZnQ6IDNweCAjMzMzMzMzIHNvbGlkO1xyXG4gIHBhZGRpbmctbGVmdDogMTVweDtcclxufVxyXG5cclxuLkNoZWZBbmREaWV0IHtcclxuICB3aWR0aDogMjAwcHg7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGFsaWduLXNlbGY6IHJpZ2h0O1xyXG4gIHdpZHRoOiAyODhweDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgcmlnaHQ6IDIwcHg7XHJcbiAgYm90dG9tOiAyNSU7XHJcbiAgcGFkZGluZy1sZWZ0OiA0NXB4O1xyXG4gIGJvcmRlci1sZWZ0OiAzcHggc29saWQgIzk5OTk5OTtcclxufVxyXG5cclxuLkNoZWZBbmREaWV0IGg2IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDAgMCAxMHB4O1xyXG4gIGNvbG9yOiAjOTk5OTk5O1xyXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbn1cclxuLkNoZWZBbmREaWV0IGgzIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuLmRpZXRUeXBlIHtcclxuICBtYXJnaW4tdG9wOiAyNXB4O1xyXG59XHJcbi5TZXREaWV0QnRuIHtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwcHg7XHJcbiAgd2lkdGg6IDEwMHB4O1xyXG59XHJcblxyXG4uUGF0aWVudENhdGVnb3J5RGV0YWlscyB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZy1ib3R0b206IDI1cHg7XHJcbn1cclxuLlBhdGllbnRDYXRlZ29yeURldGFpbHMgaDYge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBsaW5lLWhlaWdodDogMTZweDtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMCAwIDEwcHg7XHJcbiAgY29sb3I6ICM5OTk5OTk7XHJcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxufVxyXG5cclxuLlBhdGllbnRDYXRlZ29yeURldGFpbHMgaDMge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBsaW5lLWhlaWdodDogMTZweDtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLkNhdGVnb3J5VGl0bGUge1xyXG4gIGJhY2tncm91bmQ6ICNlYWVjZWM7XHJcbiAgY29sb3I6ICM2MDdkOGI7XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcbi5DYXRlZ29yeVRpdGxlIGgyIHtcclxuICBtYXJnaW46IDA7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG59XHJcbi5tYXQtbWluaS1mYWIge1xyXG4gIHdpZHRoOiAzMHB4O1xyXG4gIGhlaWdodDogMzBweDtcclxufVxyXG4ubWF0ZXJpYWwtaWNvbnMge1xyXG4gIGhlaWdodDogMTZweDtcclxuICB3aWR0aDogMTZweDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDhweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SetFoodService } from '../set-food/set-food.service';\r\n\r\n@Component({\r\n  selector: 'app-patient-view',\r\n  templateUrl: './patient-view.component.html',\r\n  styleUrls: ['./patient-view.component.scss']\r\n})\r\nexport class PatientViewComponent implements OnInit {\r\n  displayedColumns: string[] = ['date', 'status'];\r\n  CallHistory=[];\r\n  DietHistColoumn: string[] = ['date', 'MealType', 'FoodGroup'];\r\n  CustomerID;\r\n  Dishes=[];\r\n  CustomerDetails:CustomerDetails={\r\n    Age:0,\r\n    CallHistory:\"\",\r\n    ChefName:\"\",\r\n    Dishes:\"\",\r\n    FoodDietTypeName:\"\",\r\n    Frequency:0,\r\n    Gender:\"\",\r\n    Height:\"\",\r\n    Name:\"\",\r\n    ReadingDate:\"\",\r\n    Waist:\"\",\r\n    Weight:\"\",\r\n    WorkOutType:\"\"\r\n  }\r\n\r\n  ngOnInit() {}\r\n  constructor(private router:ActivatedRoute,private service:SetFoodService,\r\n    private route:Router) {\r\n    this.CustomerID = parseInt(this.router.snapshot.paramMap.get('id'));\r\n    if(this.CustomerID!=null&&this.CustomerID>0){\r\n      this.GetDietCustomerDetails(this.CustomerID);\r\n    }\r\n  }\r\n  //get customer details\r\n  GetDietCustomerDetails(CustomerID){\r\n    this.service.GetCustomerDataForDietitian(CustomerID).subscribe(Response=>{\r\n        if(Response.Status==true){\r\n          this.CustomerDetails=Response.Data;\r\n          this.CallHistory=this.CustomerDetails.CallHistory;\r\n          this.Dishes=this.CustomerDetails.Dishes;\r\n        }\r\n    });\r\n  }\r\n  //filter Dishes\r\n  FilterDishes(){\r\n    let FilteredDishes=[];\r\n    if(this.Dishes.length>0){\r\n      this.Dishes.forEach(element => {\r\n        let FoodName=\"\";\r\n        element.forEach(element => {\r\n          FoodName=FoodName+\",\"+element.Title;\r\n        });\r\n        FoodName=FoodName.substring(1,FoodName.length);\r\n        FilteredDishes.push({\r\n          'Title':FoodName,\r\n          'DietDate':element[0].DietDate,\r\n          'MealTypeName':element[0].MealTypeName\r\n        });\r\n      });\r\n    }\r\n    return FilteredDishes;\r\n  }\r\n  //set diet for a customer\r\n  SetDiet(){\r\n    if(this.CustomerID!=null&&this.CustomerID>0){\r\n      this.route.navigate(['/ab/diet/set/'+this.CustomerID]);\r\n    }\r\n  }\r\n  \r\n}\r\nexport interface PeriodicElement {\r\n  date: string;\r\n  status: string;\r\n}\r\n\r\n\r\nexport interface DietHistory {\r\n  date: string;\r\n  MealType: string;\r\n  FoodGroup: string;\r\n}\r\n\r\nexport interface CustomerDetails{\r\n  Age;\r\n  CallHistory;\r\n  ChefName;\r\n  Dishes;\r\n  FoodDietTypeName;\r\n  Frequency;\r\n  Gender;\r\n  Height;\r\n  Name;\r\n  ReadingDate;\r\n  Waist;\r\n  Weight;\r\n  WorkOutType;\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport {\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatIconModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatSelectModule,\r\n  MatInputModule,\r\n  MatNativeDateModule\r\n} from '@angular/material';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { StatModule } from '../../../shared/modules/stat/stat.module';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { PatientViewRoutingModule } from './patient-view-routing.module';\r\nimport { PatientViewComponent } from './patient-view.component';\r\n\r\n@NgModule({\r\n  declarations: [PatientViewComponent],\r\n  imports: [\r\n    PatientViewRoutingModule,\r\n    CommonModule,\r\n    MatGridListModule,\r\n    StatModule,\r\n    MatCardModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatAutocompleteModule,\r\n    MatChipsModule,\r\n    MatRadioModule,\r\n    FlexLayoutModule.withConfig({ addFlexToParent: false })\r\n  ]\r\n})\r\nexport class PatientViewModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CommonVariables } from 'src/app/shared/commmon';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CommonResponse } from 'src/app/shared/commmon/ServiceClass';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SetFoodService {\r\n\r\n  constructor(private util:CommonVariables,private http:HttpClient) { }\r\n  //get customer data for dietitian\r\n  GetCustomerDataForDietitian(CustomerID){\r\n    let url=this.util.GetCustomerDetailsForDietitian+CustomerID;\r\n    return this.http.get<CommonResponse>(url).pipe(map((response: CommonResponse) => response));\r\n  }\r\n  //get all ready to eat food items\r\n  GetAllReadyToFoods(){\r\n    let url=this.util.GetAllReadyToEatableFoods;\r\n    return this.http.get<CommonResponse>(url).pipe(map((response: CommonResponse) => response));  \r\n  }\r\n  //get all meal types\r\n  GetAllMealTypes(){\r\n    let url=this.util.GetMealTypes;\r\n    return this.http.get<CommonResponse>(url).pipe(map((response: CommonResponse) => response));\r\n  }\r\n  //save customer diet\r\n  SaveCustomerDiet(body){\r\n    let url=this.util.SaveCustomerDiet;\r\n    return this.http.post<CommonResponse>(url,body).pipe(map((response:CommonResponse)=>response));\r\n  }\r\n  //get predefined food\r\n  GetPredefinedDishes(MealTypeID){\r\n    let url=this.util.GetDishByMealType+MealTypeID;\r\n    return this.http.get<CommonResponse>(url).pipe(map((response:CommonResponse)=>{return response;}));\r\n  }\r\n}\r\n"],"sourceRoot":""}